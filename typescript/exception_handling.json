{
  "meta": {
    "language": "typescript",
    "language_version": "4.2",
    "language_name": "TypeScript"
  },
  "categories": {
    "Imports": [
      "statement_to_import_exception_handling"
    ],
    "Defining Errors/Exceptions": [
      "are_exception_types_functions",
      "are_exception_types_objects",
      "are_exception_types_gotos",
      "base_exception_type",
      "define_new_exception_type"
    ],
    "Error Capture Blocks": [
      "try_or_operator",
      "statement_to_start_trying_code",
      "statement_to_start_catching_exceptions",
      "statement_to_catch_generic_exception",
      "statement_to_catch_specific_exception",
      "statement_to_catch_multiple_exceptions",
      "statement_to_break_out_if_caught_exception",
      "statement_to_stop_program_if_caught_exception",
      "statement_to_start_code_if_no_exceptions_caught",
      "statement_to_start_cleaning_up_after_exception",
      "order_to_call_all_statements",
      "statement_to_end_trying_code",
      "property_with_exception_code",
      "property_with_exception_message",
      "property_with_stack_trace",
      "property_containing_other_info"
    ],
    "Manually Throwing exceptions": [
      "throw_generic_exception",
      "throw_exception_as_text",
      "throw_specific_exception_type"
    ],
    "Data Type Errors/Exceptions": [
      "base_data_type_exception_type",
      "invalid_data_type_exception_type",
      "variable_not_found_exception_type",
      "object_not_found_exception_type",
      "index_out_of_bounds_exception_type",
      "key_name_not_found_exception_type",
      "invalid_encoding_exception_type"
    ],
    "Mathematical Errors/Exceptions": [
      "base_mathematical_exception_type",
      "overflow_exception_type",
      "floating_point_exception_type",
      "divide_by_zero_exception_type",
      "cannot_cast_types_exception_type"
    ],
    "Memory Errors/Exceptions": [
      "base_memory_exception_type",
      "cannot_allocate_memory_exception_type",
      "out_of_memory_exception_type",
      "stack_overflow_exception_type",
      "cannot_access_pointer_exception_type"
    ],
    "File Input/Output Errors/Exceptions": [
      "base_file_exception_type",
      "end_of_file_exception_type",
      "file_does_not_exist_exception_type",
      "file_already_exists_exception_type",
      "item_is_actually_directory_exception_type",
      "item_is_not_a_directory_exception_type",
      "cannot_access_file_exception_type",
      "drive_disconnected_exception_type",
      "file_no_longer_available_exception_type",
      "file_timeout_exception"
    ],
    "Network Input/Output Errors/Exceptions": [
      "base_network_exception_type",
      "connection_refused_exception_type",
      "connection_broken_exception_type",
      "invalid_hostname_exception",
      "cannot_establish_connection_exception_type",
      "connection_timed_out_exception_type",
      "bad_certificate_exception_type",
      "expired_certificate_exception_type"
    ],
    "Operating System Errors/Exceptions": [
      "child_process_could_not_be_created_exception_type",
      "child_process_unexpected_ending_exception_type",
      "process_not_found_exception_type"
    ],
    "Other Errors/Exception Types": [
      "import_not_found_exception_type",
      "keyboard_interrupt_exception_type",
      "syntax_exception_type",
      "uncaught_signal_exception_type"
    ],
    "Warnings": [
      "base_warning_type",
      "deprecation_warning_type"
    ]
  },
  "exception_handling": {
    "statement_to_import_exception_handling": {
      "not-implemented": "true"
    },
    "are_exception_types_functions": {
      "code": "false"
    },
    "are_exception_types_objects": {
      "code": "true"
    },
    "are_exception_types_gotos": {
      "code": "false"
    },
    "base_exception_type": {
      "code": "Error"
    },
    "define_new_exception_type": {
      "code": "class CustomError extends Error {}"
    },
    "try_or_operator": {
      "not-implemented": "true"
    },
    "statement_to_start_trying_code": {
      "code": "try {\n  // try statements\n}"
    },
    "statement_to_start_catching_exceptions": {
      "code": "catch(error) {  \n  // catch statements\n}"
    },
    "statement_to_catch_generic_exception": {
      "code": "catch(error) {  \n  // catch statements\n}"
    },
    "statement_to_catch_specific_exception": {
      "not-implemented": "true"
    },
    "statement_to_catch_multiple_exceptions": {
      "not-implemented": "true",
      "comment" : "TypeScript supports to catch only one exception"
    },
    "statement_to_break_out_if_caught_exception": {
      "not-implemented": "true"
    },
    "statement_to_stop_program_if_caught_exception": {
      "not-implemented": "true"
    },
    "statement_to_start_code_if_no_exceptions_caught": {
      "not-implemented": "true"
    },
    "statement_to_start_cleaning_up_after_exception": {
      "code": "finally {\n  // finally statements\n}"
    },
    "order_to_call_all_statements": {
      "code": "try {\n  // try statement\n} catch (error) {\n  if (error instanceof FirstCustomExceptionError) {\n    // catch statement\n  } else if (error instanceof SecondCustomExceptionError) {\n    // catch statement\n  } else {\n    // statement for rest exceptions\n  }\n}\n"
    },
    "statement_to_end_trying_code": {
      "not-implemented": "true"
    },
    "property_with_exception_code": {
      "not-implemented": "true"
    },
    "property_with_exception_message": {
      "code": "Error.prototype.message"
    },
    "property_with_stack_trace": {
      "not-implemented": "true"
    },
    "property_containing_other_info": {
      "not-implemented": "true"
    },
    "throw_generic_exception": {
      "code": "throw new Error(message)"
    },
    "throw_exception_as_text": {
      "code": "throw 'ErrorText'"
    },
    "throw_specific_exception_type": {
      "code": "throw new SpecificError()"
    },
    "base_data_type_exception_type": {
      "code": "Error"
    },
    "invalid_data_type_exception_type": {
      "code": "TypeError"
    },
    "variable_not_found_exception_type": {
      "code": "ReferenceError"
    },
    "object_not_found_exception_type": {
      "code": "ReferenceError"
    },
    "index_out_of_bounds_exception_type": {
      "code": "RangeError"
    },
    "key_name_not_found_exception_type": {
      "not-implemented": "true"
    },
    "invalid_encoding_exception_type": {
      "code": "URIError"
    },
    "base_mathematical_exception_type": {
      "not-implemented": "true"
    },
    "overflow_exception_type": {
      "not-implemented": "true"
    },
    "floating_point_exception_type": {
      "not-implemented": "true"
    },
    "divide_by_zero_exception_type": {
      "not-implemented": "true"
    },
    "cannot_cast_types_exception_type": {
      "not-implemented": "true"
    },
    "base_memory_exception_type": {
      "not-implemented": "true"
    },
    "cannot_allocate_memory_exception_type": {
      "not-implemented": "true"
    },
    "out_of_memory_exception_type": {
      "not-implemented": "true"
    },
    "stack_overflow_exception_type": {
      "not-implemented": "true"
    },
    "cannot_access_pointer_exception_type": {
      "not-implemented": "true"
    },
    "base_file_exception_type": {
      "not-implemented": "true"
    },
    "end_of_file_exception_type": {
      "not-implemented": "true"
    },
    "file_does_not_exist_exception_type": {
      "not-implemented": "true"
    },
    "file_already_exists_exception_type": {
      "not-implemented": "true"
    },
    "item_is_actually_directory_exception_type": {
      "not-implemented": "true"
    },
    "item_is_not_a_directory_exception_type": {
      "not-implemented": "true"
    },
    "cannot_access_file_exception_type": {
      "not-implemented": "true"
    },
    "drive_disconnected_exception_type": {
      "not-implemented": "true"
    },
    "file_no_longer_available_exception_type": {
      "not-implemented": "true"
    },
    "file_timeout_exception": {
      "not-implemented": "true"
    },
    "base_network_exception_type": {
      "not-implemented": "true"
    },
    "connection_refused_exception_type": {
      "not-implemented": "true"
    },
    "connection_broken_exception_type": {
      "not-implemented": "true"
    },
    "invalid_hostname_exception": {
      "not-implemented": "true"
    },
    "cannot_establish_connection_exception_type": {
      "not-implemented": "true"
    },
    "connection_timed_out_exception_type": {
      "not-implemented": "true"
    },
    "bad_certificate_exception_type": {
			"not-implemented": "true"
    },
    "expired_certificate_exception_type": {
			"not-implemented": "true"
    },
    "base_test_assertion_exception_type": {
      "not-implemented": "true"
    },
    "child_process_could_not_be_created_exception_type": {
      "not-implemented": "true"
    },
    "child_process_unexpected_ending_exception_type": {
      "not-implemented": "true"
    },
    "process_not_found_exception_type": {
      "not-implemented": "true"
    },
    "import_not_found_exception_type": {
      "not-implemented": "true"
    },
    "keyboard_interrupt_exception_type": {
      "not-implemented": "true"
    },
    "syntax_exception_type": {
      "code": "SyntaxError"
    },
    "uncaught_signal_exception_type": {
      "not-implemented": "true"
    },
    "base_warning_type": {
      "not-implemented": "true"
    },
    "deprecation_warning_type": {
      "not-implemented": "true"
    }
  }
}