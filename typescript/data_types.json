{
  "meta": {
    "language": "typescript",
    "language_version": "4.2",
    "language_name": "TypeScript"
  },
  "concepts": {
    "boolean": {
      "code": "boolean"
    },
    "signed_integer_8_bit": {
      "not-implemented": true
    },
    "signed_integer_16_bit": {
      "not-implemented": true
    },
    "signed_integer_32_bit": {
      "not-implemented": true
    },
    "signed_integer_64_bit": {
      "not-implemented": true
    },
    "signed_integer_as_object": {
      "code": "BigInt",
      "comment": "The type is an object wrapper for a corresponding (untyped) primitive value"
    },
    "signed_float_16_bit": {
      "not-implemented": true
    },
    "signed_float_32_bit": {
      "not-implemented": true
    },
    "signed_float_64_bit": {
      "code": "number"
    },
    "signed_float_as_object": {
      "code": "Number"
    },
    "character": {
      "not-implemented": true,
      "comment": "It's possible to use single-character strings, such as the output of String.prototype.charAt()"
    },
    "string_as_object": {
      "code": "string"
    },
    "string_as_array": {
      "code": "string",
      "comment": "String objects support [index] notation to dereference characters, but do not support the full spectrum of array methods"
    },
    "complex_as_object": {
      "not-implemented": true
    },
    "real_number_part": {
      "not-implemented": true
    },
    "imaginary_number_part": {
      "not-implemented": true
    }
  }
}
