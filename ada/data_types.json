{
  "meta": {
    "language": "ada",
    "language_version": "2012",
    "language_name": "Ada",
    "structure": "data_types"
  },
  "concepts": {
    "boolean": {
      "code": "boolean",
      "name": "Boolean"
    },
    "signed_integer_8_bit": {
      "comment": "In Ada you can define your own integer types by declaring it like this with a range, the compiler then chooses a representation that can hold all desired values.",
      "code": "type My_Int is range -128 .. 127;",
      "name": "Signed 8-bit integer"
    },
    "signed_integer_as_object": {
      "code": "Integer",
      "name": "Signed object-based Integer"
    },
    "signed_float_64_bit": {
      "comment": "Like with integers Ada let's you create your own floating point types as well by specifying the desired amount of decimal digits",
      "code": "type My_Float is digits 15;",
      "name": "Signed 64-bit floating point"
    },
    "signed_float_as_object": {
      "code": "Float",
      "name": "Signed object-based floating point"
    },
    "character": {
      "code": "Character",
      "name": "Character"
    },
    "string_as_array": {
      "code": "String",
      "name": "String as an array of characters"
    },
    "complex_as_object": {
      "comment": "Ada's Complex type is found in the library `Ada.Numerics.Generic_Complex_Types`",
      "code": "Complex",
      "name": "Complex Number as an object"
    },
    "real_number_part": {
      "code": "Re (Complex_Number);",
      "name": "Complex number real part"
    },
    "imaginary_number_part": {
      "code": "Im (Complex_Number);",
      "name": "Complex number imaginary part"
    }
  }
}
