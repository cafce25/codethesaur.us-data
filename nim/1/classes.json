{
  "meta": {
    "language": "nim",
    "language_version": "1.6",
    "language_name": "Nim",
    "structure": "classes"
  },
  "concepts": {
    "normal_class": {
      "code": "type Name = object",
      "name": "Normal class"
    },
    "abstract_class": {
      "code": "type Name = concept",
      "name": "Abstract class"
    },
    "interface": {
      "code": "type Name = concept",
      "name": "Interface"
    },
    "read_only_class": {
      "code": "type Name = object",
      "name": "Read-only class"
    },
    "static_class": {
      "code": "",
      "comment": "Types are static",
      "name": "Static class"
    },
    "inner_class": {
      "code": "type Name = object\n  inner: InnerType",
      "name": "Inner class"
    },
    "private_variables": {
      "code": "var name* = \"value\"",
      "name": "Defining private variables"
    },
    "protected_variables": {
      "code": "var name = \"value\"",
      "name": "Defining protected variables"
    },
    "public_variables": {
      "code": "var name* = \"value\"",
      "name": "Defining public variables"
    },
    "static_variables": {
      "code": "",
      "comment": "variables are static",
      "name": "Defining static variables"
    },
    "private_functions": {
      "code": "",
      "comment": "functions are private by default",
      "name": "Defining private functions"
    },
    "protected_functions": {
      "code": "",
      "comment": "functions are protected by default",
      "name": "Defining protected functions"
    },
    "public_functions": {
      "code": "",
      "comment": "functions are private by default",
      "name": "Defining public functions"
    },
    "static_functions": {
      "code": "",
      "comment": "functions are static",
      "name": "Defining static functions"
    },
    "extends_class": {
      "code": "type Name = ref object of ParentType",
      "name": "Class that inherits/extends another class"
    },
    "extending_interface": {
      "code": "type Name = ref object of ParentType",
      "name": "Class/Interface that inherits/extends another class/interface"
    },
    "calling_superclass_functions": {
      "code": "superclass.function()",
      "name": "Calling a superclass function"
    },
    "instantiating_object": {
      "code": "Name(argument: \"value\", other: 42)",
      "name": "Instantiating a new object"
    },
    "instantiating_polymorphic_object": {
      "code": "Name(argument: \"value\", other: 42)",
      "name": "Instantiating a polymorphic object"
    },
    "implement_constructor": {
      "code": "",
      "comment": "Any function that returns the Type",
      "name": "Implementing a class constructor"
    }
  }
}
