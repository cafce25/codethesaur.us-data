{
  "meta": {
    "language": "nim",
    "language_version": "1.6",
    "language_name": "Nim"
  },
  "concepts": {
    "addition": {
      "code": "+"
    },
    "addition_assignment": {
      "code": "+="
    },
    "subtraction": {
      "code": "-"
    },
    "subtraction_assignment": {
      "code": "-="
    },
    "multiplication": {
      "code": "*"
    },
    "multiplication_assignment": {
      "code": "*="
    },
    "division": {
      "code": "/"
    },
    "division_assignment": {
      "code": "/="
    },
    "integer_division": {
      "code": "div"
    },
    "integer_division_assignment": {
      "not-implemented": "true"
    },
    "modulus": {
      "code": "mod"
    },
    "modulus_assignment": {
      "not-implemented": "true"
    },
    "unary_plus": {
      "code": "+Infinite"
    },
    "unary_minus": {
      "code": "-Infinite"
    },
    "increment": {
      "code": "inc"
    },
    "decrement": {
      "code": "dec"
    },
    "exponential": {
      "code": "^"
    },
    "factorial": {
      "code": "fac"
    },
    "absolute_value": {
      "code": "abs"
    },
    "percentage": {
      "not-implemented": "true"
    },
    "equal_to": {
      "code": "=="
    },
    "not_equal_to": {
      "code": "!="
    },
    "less_than": {
      "code": "<"
    },
    "less_than_or_equal_to": {
      "code": "<="
    },
    "greater_than": {
      "code": ">"
    },
    "greater_than_or_equal_to": {
      "code": ">="
    },
    "null_coalescing": {
      "code": "?.",
      "comment": "'not null' annotation allows null-free programming"
    },
    "is": {
      "code": "is"
    },
    "is_not": {
      "code": "isnot"
    },
    "left_shift": {
      "code": "shl"
    },
    "left_shift_assignment": {
      "not-implemented": "true"
    },
    "right_shift": {
      "code": "shr"
    },
    "right_shift_assignment": {
      "not-implemented": "true"
    },
    "ternary": {
      "code": "if conditional: value0 else: value1",
      "comment": "Ternary operator is just if...else inline"
    },
    "null_forgiving": {
      "not-implemented": "true",
      "comment": "'not null' annotation allows null-free programming"
    }
  }
}
