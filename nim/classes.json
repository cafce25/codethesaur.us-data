{
  "meta": {
    "language": "nim",
    "language_version": "1.6",
    "language_name": "Nim",
    "structure": "classes"
  },
  "concepts": {
    "normal_class": {
      "code": "type Name = object"
    },
    "abstract_class": {
      "code": "type Name = concept"
    },
    "interface": {
      "code": "type Name = concept"
    },
    "read_only_class": {
      "code": "type Name = object"
    },
    "static_class": {
      "code": "",
      "comment": "Types are static"
    },
    "inner_class": {
      "code": "type Name = object\n  inner: InnerType"
    },
    "private_variables": {
      "code": "var name* = \"value\""
    },
    "protected_variables": {
      "code": "var name = \"value\""
    },
    "public_variables": {
      "code": "var name* = \"value\""
    },
    "static_variables": {
      "code": "",
      "comment": "variables are static"
    },
    "private_functions": {
      "code": "",
      "comment": "functions are private by default"
    },
    "protected_functions": {
      "code": "",
      "comment": "functions are protected by default"
    },
    "public_functions": {
      "code": "",
      "comment": "functions are private by default"
    },
    "static_functions": {
      "code": "",
      "comment": "functions are static"
    },
    "extends_class": {
      "code": "type Name = ref object of ParentType"
    },
    "extending_interface": {
      "code": "type Name = ref object of ParentType"
    },
    "calling_superclass_functions": {
      "code": "superclass.function()"
    },
    "instantiating_object": {
      "code": "Name(argument: \"value\", other: 42)"
    },
    "instantiating_polymorphic_object": {
      "code": "Name(argument: \"value\", other: 42)"
    },
    "implement_constructor": {
      "code": "",
      "comment": "Any function that returns the Type"
    }
  }
}
