{
  "meta": {
    "language": "haskell",
    "language_version": "2010",
    "language_name": "Haskell"
  },
  "categories": {
    "Conditional Statements (ifs)": [
      "if_else_conditional",
      "if_elseif_else_conditional",
      "switch_statement",
      "ternary_conditional"
    ],
    "Loops": [
      "while_loop",
      "until_loop",
      "foreach_loop"
    ],
    "Iterations": [
      "map_iteration",
      "filter_iteration",
      "fold_iteration"
    ]
  },
  "control_structures": {
    "if_else_conditional": {
      "code": "if condition\n    then expression\n    else expression"
    },
    "if_elseif_else_conditional": {
      "code": "if condition\n    then expression\n    else if condition\n        then expression\n        else expression"
    },
    "switch_statement": {
      "code": "case expression of\n    \"value1\" -> expression\n    \"value2\" | guard -> expression\n    \"value2\" | another_guard -> expression\n    _ -> expression -- default case"
    },
    "ternary_conditional": {
      "code": "if condition\n    then expression\n    else expression"
    },
    "while_loop": {
      "code": "whileM monadBool"
    },
    "until_loop": {
      "code": "untilJustM monadMaybeA"
    },
    "foreach_loop": {
      "code": "forM traversable function"
    },
    "map_iteration": {
      "code": "map function list"
    },
    "filter_iteration": {
      "code": "filter function list"
    },
    "fold_iteration": {
      "comment": "haskell also supplies `foldl` and `foldl'` to provide folding with left association",
      "code": "foldr function start foldable"
    }
  }
}
