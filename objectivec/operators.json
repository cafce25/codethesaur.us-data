{
  "meta": {
    "language": "objectivec",
    "language_version": "2.0",
    "language_name": "Objective-C",
    "structure": "operators"
  },
  "concepts": {
    "addition": {
      "code": "+"
    },
    "addition_assignment": {
      "code": "+=",
      "comment": "a += 20 is same as a = a + 20"
    },
    "subtraction": {
      "code": "-"
    },
    "subtraction_assignment": {
      "code": "-=",
      "comment": "a -= 20 is same as a = a - 20"
    },
    "multiplication": {
      "code": "*"
    },
    "multiplication_assignment": {
      "code": "*=",
      "comment": "a *= 20 is same as a = a * 20"
    },
    "division": {
      "code": "/",
      "comment": "Returns integer quotient i.e. 31/2 gives 15"
    },
    "division_assignment": {
      "code": "/=",
      "comment": "a /= 20 is same as a = a / 20"
    },
    "modulus": {
      "code": "%",
      "comment": "Gives remainder of division"
    },
    "modulus_assignment": {
      "code": "%="
    },
    "unary_plus": {
      "code": "int a = 12",
      "comment": "Value of a is positive 12"
    },
    "unary_minus": {
      "code": "int a = -12",
      "comment": "Value of a is negative 12"
    },
    "increment": {
      "code": "int a = 10; a++;",
      "comment": "Value of a is 11"
    },
    "decrement": {
      "code": "int a = 10; a--;",
      "comment": "Value of a is 9"
    },
    "exponential": {
      "code": "^",
      "comment": "Value of 5^3 is 125"
    },
    "factorial": {
      "not-implemented": "true"
    },
    "absolute_value": {
      "not-implemented": "true"
    },
    "percentage": {
      "not-implemented": "true"
    },
    "equal_to": {
      "code": "=="
    },
    "not_equal_to": {
      "code": "!="
    },
    "less_than": {
      "code": "<"
    },
    "less_than_or_equal_to": {
      "code": "<="
    },
    "greater_than": {
      "code": ">"
    },
    "greater_than_or_equal_to": {
      "code": ">="
    },
    "null_coalescing": {
      "not-implemented": "true"
    },
    "is": {
      "not-implemented": "true"
    },
    "is_not": {
      "not-implemented": "true"
    },
    "left_shift": {
      "code": "int a = 1 << 2",
      "comment": "Shifts the specified bits to left, so a equals to 4"
    },
    "left_shift_assignment": {
      "code": "<<="
    },
    "right_shift": {
      "code": "int a = 4 >> 2",
      "comment": "Shifts specified bits to right side, 2 bits in this case so a equals to 1"
    },
    "right_shift_assignment": {
      "code": ">>="
    },
    "ternary": {
      "code": "int a = (5 == 6) ? 60 : 80",
      "comment": "If (5 == 6) true, then value of a is 60 else 80."
    },
    "null_forgiving": {
      "not-implemented": "true"
    }
  }
}
