{
  "meta": {
    "language": "perl",
    "language_version": "5.34",
    "language_name": "Perl"
  },
  "concepts": {
    "addition": {
      "code": "+"
    },
    "addition_assignment": {
      "code": "+="
    },
    "subtraction": {
      "code": "-"
    },
    "subtraction_assignment": {
      "code": "-="
    },
    "multiplication": {
      "code": "*"
    },
    "multiplication_assignment": {
      "code": "*="
    },
    "division": {
      "code": "/"
    },
    "division_assignment": {
      "code": "/="
    },
    "integer_division": {
      "code": "/"
    },
    "integer_division_assignment": {
      "code": "/="
    },
    "modulus": {
      "code": "%"
    },
    "modulus_assignment": {
      "code": "%="
    },
    "unary_plus": {
      "code": "+"
    },
    "unary_minus": {
      "code": "-"
    },
    "increment": {
      "code": "++"
    },
    "decrement": {
      "code": "--"
    },
    "exponential": {
      "code": "**"
    },
    "factorial": {
      "not-implemented": true
    },
    "absolute_value": {
      "not-implemented": true
    },
    "percentage": {
      "not-implemented": true
    },
    "equal_to": {
      "code": "==\neq",
      "comment": "Use == for numerical comparision and eq for string comparison"
    },
    "not_equal_to": {
      "code": "!=\nne",
      "comment": "Use != for numerical comparision and ne for string comparison"
    },
    "less_than": {
      "code": "<\nlt",
      "comment": "Use < for numerical comparision and lt for string comparison"
    },
    "less_than_or_equal_to": {
      "code": "<=\nle",
      "comment": "Use <= for numerical comparision and le for string comparison"
    },
    "greater_than": {
      "code": ">\ngt",
      "comment": "Use > for numerical comparision and gt for string comparison"
    },
    "greater_than_or_equal_to": {
      "code": ">=\nge",
      "comment": "Use >= for numerical comparision and ge for string comparison"
    },
    "null_coalescing": {
      "code": "//"
    },
    "is": {
      "not-implemented": true
    },
    "is_not": {
      "not-implemented": true
    },
    "left_shift": {
      "code": "<<"
    },
    "left_shift_assignment": {
      "not-implemented": true
    },
    "right_shift": {
      "code": ">>"
    },
    "right_shift_assignment": {
      "not-implemented": true
    },
    "ternary": {
      "name": "Ternary operator",
      "code": "? :"
    },
    "null_forgiving": {
      "not-implemented": true
    }
  }
}
