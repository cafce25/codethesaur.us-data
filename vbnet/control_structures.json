{
  "meta": {
    "language": "vbnet",
    "language_version": "16.0",
    "language_name": "Visual Basic",
    "structure": "control_structures"
  },
  "concepts": {
    "if_conditional": {
      "code": "If condition Then\n     statements\nEnd If"
    },
    "if_else_conditional": {
      "code": "If condition Then\n     statements\nElse\n     statements\nEnd If"
    },
    "if_elseif_conditional": {
      "code": "If condition Then\n     statements\nElseIf condition Then\n     statements\nEnd If"
    },
    "if_elseif_else_conditional": {
      "code": "If condition Then\n     statements\nElse if condition Then\n     statements\nElse\n     statements\nEnd If"
    },
    "switch_statement": {
      "code": "Select Case expression\n     Case x\n          statements\n     Case y\n          statements\n     Case Else\n          statements\nEnd Select"
    },
    "ternary_conditional": {
      "code": "If(condition, trueExpression, falseExpression)"
    },
    "while_loop": {
      "code": "Do While condition\n     statements\nLoop"
    },
    "do_while_loop": {
      "code": "Do\n     statements\nLoop While condition"
    },
    "until_loop": {
      "code": "Do Until condition\n     statements\nLoop"
    },
    "do_until_loop": {
      "code": "Do\n     statements\nLoop Until condition"
    },
    "for_loop": {
      "code": "For expression To end\n     statements\nNext",
      "comment": "Can also set a step: `For number as Double = 2 To 0 Step -0.25`"
    },
    "foreach_loop": {
      "code": "For Each item in object\n     statements\nNext"
    },
    "list_comprehension": {
      "code": "Dim new_list = From item In iterable\n               Where condition"
    },
    "each_iteration": {
      "not-implemented": true
    },
    "map_iteration": {
      "not-implemented": true
    },
    "filter_iteration": {
      "not-implemented": true
    },
    "fold_iteration": {
      "not-implemented": true
    }
  }
}
