{
  "meta": {
    "language": "ruby",
    "language_version": "3.0",
    "language_name": "Ruby"
  },
  "concepts": {
    "statement_to_import_exception_handling": {
      "not-implemented": "true"
    },
    "are_exception_types_functions": {
      "code": "false"
    },
    "are_exception_types_objects": {
      "code": "true"
    },
    "are_exception_types_gotos": {
      "code": "false"
    },
    "base_exception_type": {
      "code": "Exception"
    },
    "define_new_exception_type": {
      "code": "class CustomException < Exception"
    },
    "try_or_operator": {
      "not-implemented": "true"
    },
    "statement_to_start_trying_code": {
      "code": "begin\n  # try statements"
    },
    "statement_to_start_catching_exceptions": {
      "not-implemented": "true"
    },
    "statement_to_catch_generic_exception": {
      "code": "rescue => exception\n  # catch statements"
    },
    "statement_to_catch_specific_exception": {
      "code": "rescue SpecificException => exception\n  # catch statements"
    },
    "statement_to_catch_multiple_exceptions": {
      "code": "rescue Exception1, Exception2 => exception\n  # catch statements"
    },
    "statement_to_break_out_if_caught_exception": {
      "not-implemented": "true"
    },
    "statement_to_stop_program_if_caught_exception": {
      "code": "raise"
    },
    "statement_to_start_code_if_no_exceptions_caught": {
      "code": "else \n # else statements"
    },
    "statement_to_start_cleaning_up_after_exception": {
      "code": "ensure \n # ensure statements"
    },
    "order_to_call_all_statements": {
      "code": "begin\n  # try statements\nrescue => exception\n  # catch statements\nelse\n  # else statements\nensure\n # ensure statements\nend"
    },
    "statement_to_end_trying_code": {
      "code": "end"
    },
    "property_with_exception_code": {
      "not-implemented": "true"
    },
    "property_with_exception_message": {
      "code": "message"
    },
    "property_with_stack_trace": {
      "code": "backtrace"
    },
    "property_containing_other_info": {
      "code": "inspect"
    },
    "throw_generic_exception": {
      "code": "raise"
    },
    "throw_exception_as_text": {
      "code": "raise error_text"
    },
    "throw_specific_exception_type": {
      "code": "raise SpecificException.new(error_text)"
    },
    "base_data_type_exception_type": {
      "code": "Exception"
    },
    "invalid_data_type_exception_type": {
      "code": "TypeError"
    },
    "variable_not_found_exception_type": {
      "code": "NameError"
    },
    "object_not_found_exception_type": {
      "code": "NameError"
    },
    "index_out_of_bounds_exception_type": {
      "code": "IndexError"
    },
    "key_name_not_found_exception_type": {
      "code": "KeyError"
    },
    "invalid_encoding_exception_type": {
      "code": "EncodingError"
    },
    "base_mathematical_exception_type": {
      "not-implemented": "true"
    },
    "overflow_exception_type": {
      "not-implemented": "true"
    },
    "floating_point_exception_type": {
      "not-implemented": "true"
    },
    "divide_by_zero_exception_type": {
      "code": "ZeroDivisionError"
    },
    "cannot_cast_types_exception_type": {
      "not-implemented": "true"
    },
    "base_memory_exception_type": {
      "code": "NoMemoryError"
    },
    "cannot_allocate_memory_exception_type": {
      "code": "NoMemoryError"
    },
    "out_of_memory_exception_type": {
      "code": "NoMemoryError"
    },
    "stack_overflow_exception_type": {
      "code": "SystemStackError"
    },
    "cannot_access_pointer_exception_type": {
      "not-implemented": "true"
    },
    "base_file_exception_type": {
      "code": "IOError"
    },
    "end_of_file_exception_type": {
      "code": "EOFError"
    },
    "file_does_not_exist_exception_type": {
      "code": "LoadError"
    },
    "file_already_exists_exception_type": {
      "not-implemented": "true"
    },
    "item_is_actually_directory_exception_type": {
      "not-implemented": "true"
    },
    "item_is_not_a_directory_exception_type": {
      "not-implemented": "true"
    },
    "cannot_access_file_exception_type": {
      "code": "LoadError"
    },
    "drive_disconnected_exception_type": {
      "not-implemented": "true"
    },
    "file_no_longer_available_exception_type": {
      "not-implemented": "true"
    },
    "file_timeout_exception": {
      "not-implemented": "true"
    },
    "base_network_exception_type": {
      "not-implemented": "true"
    },
    "connection_refused_exception_type": {
      "code": "Errno::ECONNREFUSED"
    },
    "connection_broken_exception_type": {
      "not-implemented": "true"
    },
    "invalid_hostname_exception": {
      "code": "Resolv::ResolvError"
    },
    "cannot_establish_connection_exception_type": {
      "code": "Errno::ECONNREFUSED"
    },
    "connection_timed_out_exception_type": {
      "code": "TimeoutError"
    },
    "bad_certificate_exception_type": {
      "code": "OpenSSL::SSL::SSLError"
    },
    "expired_certificate_exception_type": {
      "code": "OpenSSL::SSL::SSLError"
    },
    "base_test_assertion_exception_type": {
      "code": "Test::Unit::AssertionFailedError"
    },
    "child_process_could_not_be_created_exception_type": {
      "not-implemented": "true"
    },
    "child_process_unexpected_ending_exception_type": {
      "not-implemented": "true"
    },
    "process_not_found_exception_type": {
      "not-implemented": "true"
    },
    "import_not_found_exception_type": {
      "code": "LoadError"
    },
    "keyboard_interrupt_exception_type": {
      "code": "Interrupt"
    },
    "syntax_exception_type": {
      "code": "SyntaxError"
    },
    "uncaught_signal_exception_type": {
      "code": "SignalException"
    },
    "base_warning_type": {
      "code": "Warning.warn "
    },
    "deprecation_warning_type": {
      "not-implemented": "true"
    }
  }
}
