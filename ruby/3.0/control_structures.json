{
  "meta": {
    "language": "ruby",
    "language_version": "3.0",
    "language_name": "Ruby",
    "structure": "control_structures"
  },
  "concepts": {
    "if_conditional": {
      "code": "if (true)\n  expression\nend",
      "comments": "The parenthesis around the conditional are optional.",
      "name": "If conditional"
    },
    "if_else_conditional": {
      "code": "if true\n  expressions\nelse\n  expressions\nend",
      "name": "If/Else conditional"
    },
    "if_elseif_conditional": {
      "code": "if true\n  expressions\nelsif true\n  expressions\nend",
      "name": "If/ElseIf conditional"
    },
    "if_elseif_else_conditional": {
      "code": "if condition\n  expressions\nelsif condition\n  expressions\nelse\n  expressionss\nend",
      "name": "If/ElseIf/Else conditional"
    },
    "ternary_conditional": {
      "code": "conditional ? true : false",
      "name": "Ternary conditional"
    },
    "while_loop": {
      "code": "while conditional\n  expressions\nend",
      "name": "While loop"
    },
    "do_while_loop": {
      "code": "loop do\n  expressions\n  break unless conditional\nend",
      "name": "Do/While loop"
    },
    "until_loop": {
      "code": "until conditional\n  expressions\nend",
      "name": "Until loop"
    },
    "do_until_loop": {
      "code": "loop do\n  expressions\n  break if conditional\nend",
      "name": "Do/Until loop"
    },
    "for_loop": {
      "code": "for i in (0...5) do |i|\n  expressions\nend",
      "comment": "`.each` is preferred. For is not normally used.",
      "name": "For loop"
    },
    "foreach_loop": {
      "code": "for i in arr do\n  puts i\nend",
      "comment": "`.each` is preferred. For is not normally used.",
      "name": "Foreach loop"
    },
    "each_iteration": {
      "code": "[].each do |item|\n  expressions\nend\n# or...\n[].each_with_index do |item, index|\n  expressions\nend",
      "name": "Each iteration"
    },
    "map_iteration": {
      "code": "[].map(&:magic!)\n# OR...\n[].map do |item|\n  item.magic!\nend\n# OR...\n[].map { |item| item.magic! }",
      "name": "Map iteration"
    },
    "filter_iteration": {
      "code": "[].select { |item| condition }",
      "name": "Filter iteration"
    },
    "fold_iteration": {
      "code": "[].reduce(:+)",
      "comment": "Inject and reduce handle this.",
      "name": "Fold iteration"
    }
  }
}
